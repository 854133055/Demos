apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'com.neenbedankt.android-apt'


apply plugin: DataAndTimePlugin

dateAndTime{
    timeFormat = 'HH:mm:ss.SSS'
    dateFormat = 'MM/dd/yyyy'
}


android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        applicationId "com.mcxtzhang.github"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.


    compile project(':library')
    apt project(':compiler')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'com.android.support:appcompat-v7:25.0.0'
    compile 'com.github.mcxtzhang:PathAnimView:V1.0.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha8'
    testCompile 'junit:junit:4.12'
}
repositories {
    mavenCentral()
}


class DataAndTimePlugin implements Plugin<Project>{
    void apply(Project project){
        //我们可以通过project.extentions进行访问，比如读取额外的Property和定义额外的Property等
        project.extensions.create("dateAndTime",DataAndTimePluginExtension)

        project.task('showTime') <<{
            println( "Current time is "+ new Date().format(project.dateAndTime.timeFormat))
        }

        project.tasks.create('showDate') <<{
            println("Current data is " + new Date().format(project.dateAndTime.dateFormat))
        }




        project.afterEvaluate{
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'
            println 'afterEvaluate'


            File configFile = file('TimeListener')
            configFile = file(configFile.absolutePath)
            println configFile.path
            println configFile.path
            println configFile.path
            println configFile.path
            println configFile.path
            println configFile.path
        }
    }
}

class DataAndTimePluginExtension{
    String timeFormat = "MM/dd/yyyy HH:mm:ss.SSS"
    String dateFormat = "yyyy-MM-dd"
}
